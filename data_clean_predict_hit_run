{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Purpose:\n",
    "# Clean and simplify data on all traffic fatalities for 2015\n",
    "# Test out models that will take all features and predict whether or not an accident will be a hit & run"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Imports and options\n",
    "import pandas as pd\n",
    "import numpy as np\n",
    "import pickle\n",
    "\n",
    "pd.options.display.float_format = '{:20,.2f}'.format\n",
    "pd.options.display.max_columns = 999\n",
    "pd.options.display.max_rows = 999\n",
    "\n",
    "from time import time\n",
    "from scipy.stats import randint as sp_randint\n",
    "\n",
    "from sklearn.tree import DecisionTreeClassifier\n",
    "from sklearn.neighbors import KNeighborsClassifier\n",
    "from sklearn.ensemble import RandomForestClassifier\n",
    "from sklearn.model_selection import train_test_split\n",
    "from sklearn.linear_model import LogisticRegression\n",
    "from sklearn.metrics import accuracy_score, precision_score, recall_score, f1_score\n",
    "from sklearn.svm import SVC\n",
    "from sklearn.model_selection import GridSearchCV\n",
    "from sklearn.model_selection import RandomizedSearchCV\n",
    "from sklearn.metrics import confusion_matrix\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hit_run</th>\n",
       "      <th>drunk_dr</th>\n",
       "      <th>drinking</th>\n",
       "      <th>dr_drink</th>\n",
       "      <th>drugs</th>\n",
       "      <th>st_case</th>\n",
       "      <th>veh_no</th>\n",
       "      <th>state</th>\n",
       "      <th>age</th>\n",
       "      <th>mod_year</th>\n",
       "      <th>ve_total</th>\n",
       "      <th>ve_forms</th>\n",
       "      <th>pvh_invl</th>\n",
       "      <th>peds</th>\n",
       "      <th>pernotmvit</th>\n",
       "      <th>permvit</th>\n",
       "      <th>persons</th>\n",
       "      <th>fatals</th>\n",
       "      <th>numoccs</th>\n",
       "      <th>first_yr</th>\n",
       "      <th>last_yr</th>\n",
       "      <th>deaths</th>\n",
       "      <th>alc_res</th>\n",
       "      <th>month</th>\n",
       "      <th>day_week</th>\n",
       "      <th>hour</th>\n",
       "      <th>nhs</th>\n",
       "      <th>rur_urb</th>\n",
       "      <th>func_sys</th>\n",
       "      <th>route</th>\n",
       "      <th>sp_jur</th>\n",
       "      <th>harm_ev</th>\n",
       "      <th>man_coll</th>\n",
       "      <th>reljct1</th>\n",
       "      <th>reljct2</th>\n",
       "      <th>typ_int</th>\n",
       "      <th>wrk_zone</th>\n",
       "      <th>rel_road</th>\n",
       "      <th>lgt_cond</th>\n",
       "      <th>weather1</th>\n",
       "      <th>weather2</th>\n",
       "      <th>weather</th>\n",
       "      <th>sch_bus</th>\n",
       "      <th>cf1</th>\n",
       "      <th>cf2</th>\n",
       "      <th>cf3</th>\n",
       "      <th>reg_stat</th>\n",
       "      <th>owner</th>\n",
       "      <th>make</th>\n",
       "      <th>body_typ</th>\n",
       "      <th>tow_veh</th>\n",
       "      <th>j_knife</th>\n",
       "      <th>gvwr</th>\n",
       "      <th>v_config</th>\n",
       "      <th>cargo_bt</th>\n",
       "      <th>haz_inv</th>\n",
       "      <th>bus_use</th>\n",
       "      <th>spec_use</th>\n",
       "      <th>emer_use</th>\n",
       "      <th>underide</th>\n",
       "      <th>rollover</th>\n",
       "      <th>rolinloc</th>\n",
       "      <th>impact1</th>\n",
       "      <th>deformed</th>\n",
       "      <th>towed</th>\n",
       "      <th>m_harm</th>\n",
       "      <th>veh_sc1</th>\n",
       "      <th>veh_sc2</th>\n",
       "      <th>fire_exp</th>\n",
       "      <th>dr_pres</th>\n",
       "      <th>l_state</th>\n",
       "      <th>l_status</th>\n",
       "      <th>l_type</th>\n",
       "      <th>cdl_stat</th>\n",
       "      <th>l_restri</th>\n",
       "      <th>prev_acc</th>\n",
       "      <th>prev_sus</th>\n",
       "      <th>prev_dwi</th>\n",
       "      <th>prev_spd</th>\n",
       "      <th>prev_oth</th>\n",
       "      <th>first_mo</th>\n",
       "      <th>last_mo</th>\n",
       "      <th>speedrel</th>\n",
       "      <th>dr_sf1</th>\n",
       "      <th>dr_sf2</th>\n",
       "      <th>dr_sf3</th>\n",
       "      <th>dr_sf4</th>\n",
       "      <th>vtrafway</th>\n",
       "      <th>vnum_lan</th>\n",
       "      <th>vspd_lim</th>\n",
       "      <th>valign</th>\n",
       "      <th>vprofile</th>\n",
       "      <th>vpavetyp</th>\n",
       "      <th>vsurcond</th>\n",
       "      <th>vtrafcon</th>\n",
       "      <th>vtcont_f</th>\n",
       "      <th>p_crash1</th>\n",
       "      <th>p_crash2</th>\n",
       "      <th>p_crash3</th>\n",
       "      <th>pcrash4</th>\n",
       "      <th>pcrash5</th>\n",
       "      <th>acc_type</th>\n",
       "      <th>sex</th>\n",
       "      <th>inj_sev</th>\n",
       "      <th>rest_use</th>\n",
       "      <th>rest_mis</th>\n",
       "      <th>air_bag</th>\n",
       "      <th>ejection</th>\n",
       "      <th>ej_path</th>\n",
       "      <th>extricat</th>\n",
       "      <th>work_inj</th>\n",
       "      <th>hispanic</th>\n",
       "      <th>race</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>10013</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>55</td>\n",
       "      <td>2007</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2013</td>\n",
       "      <td>2014</td>\n",
       "      <td>1</td>\n",
       "      <td>239</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>35</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>3</td>\n",
       "      <td>89</td>\n",
       "      <td>58</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>45</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>13</td>\n",
       "      <td>6</td>\n",
       "      <td>4</td>\n",
       "      <td>6</td>\n",
       "      <td>98</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10034</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>50</td>\n",
       "      <td>2008</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>10</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>996</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>14</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>89</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>5</td>\n",
       "      <td>45</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>53</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10067</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>39</td>\n",
       "      <td>1998</td>\n",
       "      <td>4</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>8</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2013</td>\n",
       "      <td>2013</td>\n",
       "      <td>1</td>\n",
       "      <td>996</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>11</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>55</td>\n",
       "      <td>3</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>14</td>\n",
       "      <td>62</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>51</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10069</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>1998</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2010</td>\n",
       "      <td>2014</td>\n",
       "      <td>0</td>\n",
       "      <td>996</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>21</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>20</td>\n",
       "      <td>31</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>2</td>\n",
       "      <td>5</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>9</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>4</td>\n",
       "      <td>35</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>80</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>13</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>0</td>\n",
       "      <td>20</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>10119</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>88</td>\n",
       "      <td>2003</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>20</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>3</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>18</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>12</td>\n",
       "      <td>6</td>\n",
       "      <td>2</td>\n",
       "      <td>12</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>6</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>51</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>65</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>54</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>52</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>7</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>9</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>7</td>\n",
       "      <td>1</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   hit_run  drunk_dr  drinking  dr_drink  drugs  st_case  veh_no  state  age  \\\n",
       "0        0         1         0         1      0    10013       1      1   55   \n",
       "1        0         1         0         0      0    10034       2      1   50   \n",
       "2        0         0         0         0      0    10067       2      1   39   \n",
       "3        0         1         0         0      0    10069       1      1   21   \n",
       "4        0         0         0         0      0    10119       1      1   88   \n",
       "\n",
       "   mod_year  ve_total  ve_forms  pvh_invl  peds  pernotmvit  permvit  persons  \\\n",
       "0      2007         1         1         0     0           0        1        1   \n",
       "1      2008         6         6         0     0           0       10       10   \n",
       "2      1998         4         4         0     0           0        8        8   \n",
       "3      1998         2         2         0     1           1        2        2   \n",
       "4      2003         2         2         0     0           0        2        2   \n",
       "\n",
       "   fatals  numoccs  first_yr  last_yr  deaths  alc_res  month  day_week  hour  \\\n",
       "0       1        1      2013     2014       1      239      1         7    10   \n",
       "1       1        3         0        0       1      996      1         5    14   \n",
       "2       1        2      2013     2013       1      996      2         4    11   \n",
       "3       1        1      2010     2014       0      996      2         1    21   \n",
       "4       1        1         0        0       1        0      3         1    20   \n",
       "\n",
       "   nhs  rur_urb  func_sys  route  sp_jur  harm_ev  man_coll  reljct1  reljct2  \\\n",
       "0    0        1         5      4       0        1         0        0        1   \n",
       "1    0        2         4      2       0       12         1        0        3   \n",
       "2    1        2         3      3       0       12         2        0        1   \n",
       "3    0        2         3      2       0        8         0        0        1   \n",
       "4    1        1         3      2       0       12         2        0        1   \n",
       "\n",
       "   typ_int  wrk_zone  rel_road  lgt_cond  weather1  weather2  weather  \\\n",
       "0        1         0         1         1         1         0        1   \n",
       "1        2         0         1         1        10         0       10   \n",
       "2        1         0         1         1         1         0        1   \n",
       "3        1         0         1         3         1         0        1   \n",
       "4        1         0         1         2        10         0       10   \n",
       "\n",
       "   sch_bus  cf1  cf2  cf3  reg_stat  owner  make  body_typ  tow_veh  j_knife  \\\n",
       "0        0    0    0    0         1      1    35         4        0        0   \n",
       "1        0    0    0    0         1      2    20        20        0        0   \n",
       "2        0    0    0    0         1      2    12        31        0        0   \n",
       "3        0    0    0    0         1      2    20        31        0        0   \n",
       "4        0    0    0    0         1      1    18         4        0        0   \n",
       "\n",
       "   gvwr  v_config  cargo_bt  haz_inv  bus_use  spec_use  emer_use  underide  \\\n",
       "0     0         0         0        1        0         0         0         0   \n",
       "1     0         0         0        1        0         0         0         0   \n",
       "2     0         0         0        1        0         0         0         0   \n",
       "3     0         0         0        1        0         0         0         0   \n",
       "4     0         0         0        1        0         0         0         0   \n",
       "\n",
       "   rollover  rolinloc  impact1  deformed  towed  m_harm  veh_sc1  veh_sc2  \\\n",
       "0         1         1        0         6      2       1        0        0   \n",
       "1         0         0        6         6      2      12        0        0   \n",
       "2         0         0       12         6      2      12        0        0   \n",
       "3         0         0       12         2      5       8        0        0   \n",
       "4         0         0       12         6      2      12        0        0   \n",
       "\n",
       "   fire_exp  dr_pres  l_state  l_status  l_type  cdl_stat  l_restri  prev_acc  \\\n",
       "0         0        1        1         6       1         0         0         0   \n",
       "1         0        1        1         6       1         0         1         0   \n",
       "2         0        1        1         6       1         0         0         1   \n",
       "3         0        1        1         6       1         0         0         1   \n",
       "4         0        1        1         6       1         0         0         0   \n",
       "\n",
       "   prev_sus  prev_dwi  prev_spd  prev_oth  first_mo  last_mo  speedrel  \\\n",
       "0         1         1         0         0         6        4         3   \n",
       "1         0         0         0         0         0        0         0   \n",
       "2         0         0         0         0         7        7         0   \n",
       "3         0         0         3         0         9        9         0   \n",
       "4         0         0         0         0         0        0         0   \n",
       "\n",
       "   dr_sf1  dr_sf2  dr_sf3  dr_sf4  vtrafway  vnum_lan  vspd_lim  valign  \\\n",
       "0      89      58       0       0         1         2        45       3   \n",
       "1      89       0       0       0         5         5        45       1   \n",
       "2       0       0       0       0         1         4        55       3   \n",
       "3       0       0       0       0         5         4        35       1   \n",
       "4      51       0       0       0         2         2        65       1   \n",
       "\n",
       "   vprofile  vpavetyp  vsurcond  vtrafcon  vtcont_f  p_crash1  p_crash2  \\\n",
       "0         5         2         1         0         0        14        13   \n",
       "1         1         2         2         3         3         5        53   \n",
       "2         5         2         1         0         0        14        62   \n",
       "3         1         2         1         0         0         1        80   \n",
       "4         1         2         2         0         0         1        54   \n",
       "\n",
       "   p_crash3  pcrash4  pcrash5  acc_type  sex  inj_sev  rest_use  rest_mis  \\\n",
       "0         6        4        6        98    1        4         7         0   \n",
       "1         1        1        1        21    2        3         3         0   \n",
       "2         1        1        1        51    2        3         3         0   \n",
       "3         1        1        1        13    1        0         3         0   \n",
       "4         1        1        1        52    1        4         7         0   \n",
       "\n",
       "   air_bag  ejection  ej_path  extricat  work_inj  hispanic  race  \n",
       "0        8         1        9         0         0         7     1  \n",
       "1        8         0        0         0         8         0     0  \n",
       "2        1         0        0         0         8         0     0  \n",
       "3       20         0        0         0         8         0     0  \n",
       "4        1         2        9         0         0         7     1  "
      ]
     },
     "execution_count": 3,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Import the cleaned traffic datafile\n",
    "# Source: NHTSA 2015 data https://www.kaggle.com/nhtsa/2015-traffic-fatalities\n",
    "\n",
    "with open(\"traffic.pkl\", 'rb') as picklefile:\n",
    "    traffic = pickle.load(picklefile)\n",
    "    \n",
    "traffic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(34633, 34)"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Drop duplicate columns and unnecessary columns \n",
    "def drop_columns(df, column_list):\n",
    "    for l in column_list:\n",
    "        df.drop(l, axis = 1, inplace = True)\n",
    "        \n",
    "drop_columns(traffic, ['drinking','dr_drink','st_case','veh_no','mod_year','ve_forms','pvh_invl',\n",
    "                      'pernotmvit','numoccs','first_yr','last_yr','alc_res','func_sys','route','sp_jur',\n",
    "                      'reljct1','reljct2','wrk_zone','lgt_cond','weather1','weather2','sch_bus','cf1','cf2',\n",
    "                      'cf3','reg_stat','owner','make','tow_veh','j_knife','gvwr','v_config','cargo_bt','bus_use',\n",
    "                      'spec_use','emer_use','underide','rollover','rolinloc','deformed','towed','m_harm','veh_sc1',\n",
    "                      'veh_sc2','dr_pres','l_state','l_type','first_mo','last_mo','dr_sf1','dr_sf2','dr_sf3',\n",
    "                      'dr_sf4','vtrafway','valign','p_crash2','p_crash3','pcrash4','pcrash5','acc_type','ejection',\n",
    "                      'ej_path','extricat','work_inj','hispanic','race', 'air_bag', 'state', 'vspd_lim', 'rest_use',\n",
    "                      'impact1', 'persons', 'typ_int', 'rel_road', 'vprofile', 'vpavetyp', 'p_crash1', 'vnum_lan',\n",
    "                      'vtrafcon'])\n",
    "\n",
    "traffic.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Functions to change continuous columns to discrete and etc.\n",
    "def binary(x):\n",
    "    if x > 0:\n",
    "        x = 1\n",
    "    else:\n",
    "        x = x\n",
    "    return x\n",
    "    \n",
    "def one_or_more(x):\n",
    "    if x == 1:\n",
    "        x = 0\n",
    "    else:\n",
    "        x = 1\n",
    "    return x\n",
    "    \n",
    "    \n",
    "def over_five(x):\n",
    "    if x > 4:\n",
    "        x = 5\n",
    "    else:\n",
    "        x = x\n",
    "    return x\n",
    "\n",
    "def unknown(x, unknown):\n",
    "    if x in unknown:\n",
    "        x = np.nan\n",
    "    else:\n",
    "        x = x\n",
    "    return x"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hit_run</th>\n",
       "      <th>drunk_dr</th>\n",
       "      <th>drugs</th>\n",
       "      <th>age</th>\n",
       "      <th>ve_total</th>\n",
       "      <th>peds</th>\n",
       "      <th>permvit</th>\n",
       "      <th>fatals</th>\n",
       "      <th>deaths</th>\n",
       "      <th>month</th>\n",
       "      <th>day_week</th>\n",
       "      <th>hour</th>\n",
       "      <th>nhs</th>\n",
       "      <th>rur_urb</th>\n",
       "      <th>harm_ev</th>\n",
       "      <th>man_coll</th>\n",
       "      <th>weather</th>\n",
       "      <th>body_typ</th>\n",
       "      <th>haz_inv</th>\n",
       "      <th>fire_exp</th>\n",
       "      <th>l_status</th>\n",
       "      <th>cdl_stat</th>\n",
       "      <th>l_restri</th>\n",
       "      <th>prev_acc</th>\n",
       "      <th>prev_sus</th>\n",
       "      <th>prev_dwi</th>\n",
       "      <th>prev_spd</th>\n",
       "      <th>prev_oth</th>\n",
       "      <th>speedrel</th>\n",
       "      <th>vsurcond</th>\n",
       "      <th>vtcont_f</th>\n",
       "      <th>sex</th>\n",
       "      <th>inj_sev</th>\n",
       "      <th>rest_mis</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>55</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>10</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "   hit_run  drunk_dr  drugs  age  ve_total  peds  permvit  fatals  deaths  \\\n",
       "0        0         1      0   55         1     0        1       1       1   \n",
       "\n",
       "   month  day_week  hour  nhs  rur_urb  harm_ev  man_coll  weather  body_typ  \\\n",
       "0      1         7    10    0        1        1         0        1         4   \n",
       "\n",
       "   haz_inv  fire_exp  l_status  cdl_stat  l_restri  prev_acc  prev_sus  \\\n",
       "0        1         0         6         0         0         0         1   \n",
       "\n",
       "   prev_dwi  prev_spd  prev_oth  speedrel  vsurcond  vtcont_f  sex  inj_sev  \\\n",
       "0         1         0         0         3         1         0    1        4   \n",
       "\n",
       "   rest_mis  \n",
       "0         0  "
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traffic.head(1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Drop unknowns by unknown code\n",
    "traffic['rur_urb'] = traffic['rur_urb'].apply(lambda x: unknown(x, [8,9]))\n",
    "traffic['age'] = traffic['age'].apply(lambda x: unknown(x, [998, 999]))\n",
    "traffic['month'] = traffic['month'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['day_week'] = traffic['day_week'].apply(lambda x: unknown(x, [9]))\n",
    "traffic['hour'] = traffic['hour'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['nhs'] = traffic['nhs'].apply(lambda x: unknown(x, [9]))\n",
    "traffic['rur_urb'] = traffic['rur_urb'].apply(lambda x: unknown(x, [8,9]))\n",
    "traffic['harm_ev'] = traffic['harm_ev'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['man_coll'] = traffic['man_coll'].apply(lambda x: unknown(x, [99,98]))\n",
    "traffic['weather'] = traffic['weather'].apply(lambda x: unknown(x, [98, 99]))\n",
    "traffic['hit_run'] = traffic['hit_run'].apply(lambda x: unknown(x, [9]))\n",
    "traffic['body_typ'] = traffic['body_typ'].apply(lambda x: unknown(x, [99, 98]))\n",
    "traffic['l_status'] = traffic['l_status'].apply(lambda x: unknown(x, [9]))\n",
    "traffic['cdl_stat'] = traffic['cdl_stat'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['l_restri'] = traffic['l_restri'].apply(lambda x: unknown(x, [9]))\n",
    "traffic['prev_acc'] = traffic['prev_acc'].apply(lambda x: unknown(x, [99,98]))\n",
    "traffic['prev_sus'] = traffic['prev_sus'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['prev_dwi'] = traffic['prev_dwi'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['prev_spd'] = traffic['prev_spd'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['prev_oth'] = traffic['prev_oth'].apply(lambda x: unknown(x, [99]))\n",
    "traffic['vsurcond'] = traffic['vsurcond'].apply(lambda x: unknown(x, [98,99]))\n",
    "traffic['vtcont_f'] = traffic['vtcont_f'].apply(lambda x: unknown(x, [8,9]))\n",
    "traffic['sex'] = traffic['sex'].apply(lambda x: unknown(x, [8,9]))\n",
    "traffic['inj_sev'] = traffic['inj_sev'].apply(lambda x: unknown(x, [9]))\n",
    "traffic['drugs'] = traffic['drugs'].apply(lambda x: unknown(x, [8,9]))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24363, 34)"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Drop null values\n",
    "traffic = traffic.dropna()\n",
    "traffic.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Features that will become binary\n",
    "traffic['drunk_dr'] = traffic['drunk_dr'].apply(lambda x: binary(x))\n",
    "traffic['prev_dwi'] = traffic['prev_dwi'].apply(lambda x: binary(x))\n",
    "traffic['prev_oth'] = traffic['prev_oth'].apply(lambda x: binary(x))\n",
    "traffic['prev_sus'] = traffic['prev_sus'].apply(lambda x: binary(x))\n",
    "traffic['prev_acc'] = traffic['prev_acc'].apply(lambda x: binary(x))\n",
    "traffic['prev_spd'] = traffic['prev_spd'].apply(lambda x: binary(x))\n",
    "traffic['peds'] = traffic['peds'].apply(lambda x: binary(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Features that will be one or more than one\n",
    "traffic['fatals'] = traffic['fatals'].apply(lambda x: one_or_more(x))\n",
    "traffic['deaths'] = traffic['deaths'].apply(lambda x: one_or_more(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Features that will be grouped >= 5\n",
    "traffic['ve_total'] = traffic['ve_total'].apply(lambda x: over_five(x))\n",
    "traffic['permvit'] = traffic['permvit'].apply(lambda x: over_five(x))\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hit_run</th>\n",
       "      <th>drunk_dr</th>\n",
       "      <th>drugs</th>\n",
       "      <th>age</th>\n",
       "      <th>ve_total</th>\n",
       "      <th>peds</th>\n",
       "      <th>permvit</th>\n",
       "      <th>fatals</th>\n",
       "      <th>deaths</th>\n",
       "      <th>month</th>\n",
       "      <th>day_week</th>\n",
       "      <th>hour</th>\n",
       "      <th>nhs</th>\n",
       "      <th>rur_urb</th>\n",
       "      <th>harm_ev</th>\n",
       "      <th>man_coll</th>\n",
       "      <th>weather</th>\n",
       "      <th>body_typ</th>\n",
       "      <th>haz_inv</th>\n",
       "      <th>fire_exp</th>\n",
       "      <th>l_status</th>\n",
       "      <th>cdl_stat</th>\n",
       "      <th>l_restri</th>\n",
       "      <th>prev_acc</th>\n",
       "      <th>prev_sus</th>\n",
       "      <th>prev_dwi</th>\n",
       "      <th>prev_spd</th>\n",
       "      <th>prev_oth</th>\n",
       "      <th>speedrel</th>\n",
       "      <th>vsurcond</th>\n",
       "      <th>vtcont_f</th>\n",
       "      <th>sex</th>\n",
       "      <th>inj_sev</th>\n",
       "      <th>rest_mis</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>7</td>\n",
       "      <td>10.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>3</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>5</td>\n",
       "      <td>14.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>12</td>\n",
       "      <td>1.00</td>\n",
       "      <td>10.00</td>\n",
       "      <td>20.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>4</td>\n",
       "      <td>11.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>12</td>\n",
       "      <td>2.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>31.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>3.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>21.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>8</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>31.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(65, 120]</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>20.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>12</td>\n",
       "      <td>2.00</td>\n",
       "      <td>10.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>6.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>2.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>4.00</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               hit_run  drunk_dr                drugs        age  ve_total  \\\n",
       "0                 0.00         1                 0.00   (20, 65]         1   \n",
       "1                 0.00         1                 0.00   (20, 65]         5   \n",
       "2                 0.00         0                 0.00   (20, 65]         4   \n",
       "3                 0.00         1                 0.00   (20, 65]         2   \n",
       "4                 0.00         0                 0.00  (65, 120]         2   \n",
       "\n",
       "   peds  permvit  fatals  deaths  month  day_week                 hour  \\\n",
       "0     0        1       0       0      1         7                10.00   \n",
       "1     0        5       0       0      1         5                14.00   \n",
       "2     0        5       0       0      2         4                11.00   \n",
       "3     1        2       0       1      2         1                21.00   \n",
       "4     0        2       0       0      3         1                20.00   \n",
       "\n",
       "                   nhs              rur_urb  harm_ev             man_coll  \\\n",
       "0                 0.00                 1.00        1                 0.00   \n",
       "1                 0.00                 2.00       12                 1.00   \n",
       "2                 1.00                 2.00       12                 2.00   \n",
       "3                 0.00                 2.00        8                 0.00   \n",
       "4                 1.00                 1.00       12                 2.00   \n",
       "\n",
       "               weather             body_typ  haz_inv  fire_exp  \\\n",
       "0                 1.00                 4.00        1         0   \n",
       "1                10.00                20.00        1         0   \n",
       "2                 1.00                31.00        1         0   \n",
       "3                 1.00                31.00        1         0   \n",
       "4                10.00                 4.00        1         0   \n",
       "\n",
       "              l_status             cdl_stat             l_restri  \\\n",
       "0                 6.00                 0.00                 0.00   \n",
       "1                 6.00                 0.00                 1.00   \n",
       "2                 6.00                 0.00                 0.00   \n",
       "3                 6.00                 0.00                 0.00   \n",
       "4                 6.00                 0.00                 0.00   \n",
       "\n",
       "              prev_acc             prev_sus             prev_dwi  \\\n",
       "0                 0.00                 1.00                 1.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 1.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "\n",
       "              prev_spd             prev_oth  speedrel             vsurcond  \\\n",
       "0                 0.00                 0.00         3                 1.00   \n",
       "1                 0.00                 0.00         0                 2.00   \n",
       "2                 0.00                 0.00         0                 1.00   \n",
       "3                 1.00                 0.00         0                 1.00   \n",
       "4                 0.00                 0.00         0                 2.00   \n",
       "\n",
       "              vtcont_f                  sex              inj_sev  rest_mis  \n",
       "0                 0.00                 1.00                 4.00         0  \n",
       "1                 3.00                 2.00                 3.00         0  \n",
       "2                 0.00                 2.00                 3.00         0  \n",
       "3                 0.00                 1.00                 0.00         0  \n",
       "4                 0.00                 1.00                 4.00         0  "
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Bin age\n",
    "age_bins = [0, 20, 65, 120]\n",
    "traffic['age'] = pd.cut(traffic['age'], age_bins)\n",
    "traffic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Change day to weekday or weekend\n",
    "def weekend(x):\n",
    "    if x == 1:\n",
    "        x = 'weekend'\n",
    "    if x == 7:\n",
    "        x = 'weekend'\n",
    "    if x == 6:\n",
    "        x = 'weekend'\n",
    "    else:\n",
    "        x = 'weekday'\n",
    "    return x\n",
    "\n",
    "traffic['day_week'] = traffic['day_week'].apply(lambda x: weekend(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Change hour to daytime or nighttime\n",
    "def nighttime(x):\n",
    "    if x < 6:\n",
    "        x = 'nighttime'\n",
    "    if x > 20:\n",
    "        x = 'nighttime'\n",
    "    else:\n",
    "        x = 'daytime'\n",
    "\n",
    "    return x\n",
    "\n",
    "traffic['hour'] = traffic['hour'].apply(lambda x: nighttime(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Change injury severity to binary\n",
    "def inj_sev(x):\n",
    "    if x > 2:\n",
    "        x = 'serious'\n",
    "    else:\n",
    "        x = 'minor'\n",
    "    return x\n",
    "\n",
    "traffic['inj_sev'] = traffic['inj_sev'].apply(lambda x: inj_sev(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Simplify license status\n",
    "def license_stat(x):\n",
    "    if x == 6:\n",
    "        x = 'valid'\n",
    "    else:\n",
    "        x = 'invalid'\n",
    "    return x\n",
    "\n",
    "traffic['l_status'] = traffic['l_status'].apply(lambda x: license_stat(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Simplify CDL license status\n",
    "def CDL_stat(x):\n",
    "    if x == 6:\n",
    "        x = 'valid'\n",
    "    else:\n",
    "        x = 'invalid'\n",
    "    return x\n",
    "\n",
    "traffic['cdl_stat'] = traffic['cdl_stat'].apply(lambda x: CDL_stat(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Simplify car body type\n",
    "def body_type(x):\n",
    "    \n",
    "    if x >= 90:\n",
    "        x = 'other'\n",
    "    if 90 > x >= 80:\n",
    "        x = 'motorcycle'\n",
    "    if 80 > x >= 61:\n",
    "        x = 'big truck'\n",
    "    if 61 > x >= 50:\n",
    "        x = 'bus'\n",
    "    if 50 > x >= 30:\n",
    "        x = 'pickup truck'\n",
    "    if 30 > x >= 10:\n",
    "        x = 'van or SUV'\n",
    "    if 10 > x >= 2:\n",
    "        x = 'car'\n",
    "    if x == 1:\n",
    "        x = 'convertible'\n",
    "\n",
    "    return x\n",
    "\n",
    "traffic['body_typ'] = traffic['body_typ'].apply(lambda x: body_type(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Simplify harmful event\n",
    "\n",
    "def harm_ev(x):\n",
    "    if x >= 14:\n",
    "        x = 'inanimate'\n",
    "    if 14 > x >= 12:\n",
    "        x = 'vehicle'\n",
    "    if 12 > x >= 11:\n",
    "        x = 'animal'\n",
    "    if 11 > x >= 10:\n",
    "        x = 'train'\n",
    "    if 10 > x >= 8:\n",
    "        x = 'ped or cyclist'\n",
    "    if 8 > x:\n",
    "        x = 'vehicle'\n",
    "\n",
    "    return x\n",
    "\n",
    "traffic ['harm_ev'] = traffic['harm_ev'].apply(lambda x: harm_ev(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Simplify road surface conditions\n",
    "\n",
    "def surf(x):\n",
    "    if x > 1:\n",
    "        x = 'wet'\n",
    "    if x == 1:\n",
    "        x = 'dry'\n",
    "    return x\n",
    "        \n",
    "traffic['vsurcond'] = traffic['vsurcond'].apply(lambda x: surf(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Simplify weather\n",
    "\n",
    "def weather (x):\n",
    "    if x >= 11:\n",
    "        x = 'bad'\n",
    "    if 11 > x >= 8:\n",
    "        x = 'good'\n",
    "    if 8 > x >= 3:\n",
    "        x = 'bad'\n",
    "    if 3 > x:\n",
    "        x = 'good'\n",
    "\n",
    "    return x\n",
    "\n",
    "traffic ['weather'] = traffic['weather'].apply(lambda x: weather(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Simplify month\n",
    "def month(x):\n",
    "    if x > 11:\n",
    "        x = 'winter'\n",
    "    if 11 >= x > 8:\n",
    "        x = 'fall'\n",
    "    if 8 >= x > 4:\n",
    "        x = 'summer'\n",
    "    if 4 >= x > 2:\n",
    "        x = 'spring'\n",
    "    if x <= 2:\n",
    "        x = 'winter'\n",
    "    return x\n",
    "\n",
    "traffic['month'] = traffic['month'].apply(lambda x: month(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 23,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Simplify whether it was speeding or not\n",
    "def speeding(x):\n",
    "    if x > 0:\n",
    "        x = 'speeding'\n",
    "    if x == 0:\n",
    "        x = 'not_speeding'\n",
    "    return x\n",
    "\n",
    "traffic['speedrel'] = traffic['speedrel'].apply(lambda x: speeding(x))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 24,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hit_run</th>\n",
       "      <th>drunk_dr</th>\n",
       "      <th>drugs</th>\n",
       "      <th>age</th>\n",
       "      <th>ve_total</th>\n",
       "      <th>peds</th>\n",
       "      <th>permvit</th>\n",
       "      <th>fatals</th>\n",
       "      <th>deaths</th>\n",
       "      <th>month</th>\n",
       "      <th>day_week</th>\n",
       "      <th>hour</th>\n",
       "      <th>nhs</th>\n",
       "      <th>rur_urb</th>\n",
       "      <th>harm_ev</th>\n",
       "      <th>man_coll</th>\n",
       "      <th>weather</th>\n",
       "      <th>body_typ</th>\n",
       "      <th>haz_inv</th>\n",
       "      <th>fire_exp</th>\n",
       "      <th>l_status</th>\n",
       "      <th>cdl_stat</th>\n",
       "      <th>l_restri</th>\n",
       "      <th>prev_acc</th>\n",
       "      <th>prev_sus</th>\n",
       "      <th>prev_dwi</th>\n",
       "      <th>prev_spd</th>\n",
       "      <th>prev_oth</th>\n",
       "      <th>speedrel</th>\n",
       "      <th>vsurcond</th>\n",
       "      <th>vtcont_f</th>\n",
       "      <th>sex</th>\n",
       "      <th>inj_sev</th>\n",
       "      <th>rest_mis</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>winter</td>\n",
       "      <td>weekday</td>\n",
       "      <td>daytime</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>vehicle</td>\n",
       "      <td>0.00</td>\n",
       "      <td>good</td>\n",
       "      <td>car</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>valid</td>\n",
       "      <td>invalid</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>serious</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>winter</td>\n",
       "      <td>weekday</td>\n",
       "      <td>daytime</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>vehicle</td>\n",
       "      <td>1.00</td>\n",
       "      <td>good</td>\n",
       "      <td>van or SUV</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>valid</td>\n",
       "      <td>invalid</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>not_speeding</td>\n",
       "      <td>wet</td>\n",
       "      <td>3.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>serious</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>4</td>\n",
       "      <td>0</td>\n",
       "      <td>5</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>winter</td>\n",
       "      <td>weekday</td>\n",
       "      <td>daytime</td>\n",
       "      <td>1.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>vehicle</td>\n",
       "      <td>2.00</td>\n",
       "      <td>good</td>\n",
       "      <td>pickup truck</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>valid</td>\n",
       "      <td>invalid</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>not_speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>serious</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(20, 65]</td>\n",
       "      <td>2</td>\n",
       "      <td>1</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>1</td>\n",
       "      <td>winter</td>\n",
       "      <td>weekday</td>\n",
       "      <td>nighttime</td>\n",
       "      <td>0.00</td>\n",
       "      <td>2.00</td>\n",
       "      <td>ped or cyclist</td>\n",
       "      <td>0.00</td>\n",
       "      <td>good</td>\n",
       "      <td>pickup truck</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>valid</td>\n",
       "      <td>invalid</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>not_speeding</td>\n",
       "      <td>dry</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>minor</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0</td>\n",
       "      <td>0.00</td>\n",
       "      <td>(65, 120]</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "      <td>0</td>\n",
       "      <td>spring</td>\n",
       "      <td>weekday</td>\n",
       "      <td>daytime</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>vehicle</td>\n",
       "      <td>2.00</td>\n",
       "      <td>good</td>\n",
       "      <td>car</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "      <td>valid</td>\n",
       "      <td>invalid</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>not_speeding</td>\n",
       "      <td>wet</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>serious</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               hit_run  drunk_dr                drugs        age  ve_total  \\\n",
       "0                 0.00         1                 0.00   (20, 65]         1   \n",
       "1                 0.00         1                 0.00   (20, 65]         5   \n",
       "2                 0.00         0                 0.00   (20, 65]         4   \n",
       "3                 0.00         1                 0.00   (20, 65]         2   \n",
       "4                 0.00         0                 0.00  (65, 120]         2   \n",
       "\n",
       "   peds  permvit  fatals  deaths   month day_week       hour  \\\n",
       "0     0        1       0       0  winter  weekday    daytime   \n",
       "1     0        5       0       0  winter  weekday    daytime   \n",
       "2     0        5       0       0  winter  weekday    daytime   \n",
       "3     1        2       0       1  winter  weekday  nighttime   \n",
       "4     0        2       0       0  spring  weekday    daytime   \n",
       "\n",
       "                   nhs              rur_urb         harm_ev  \\\n",
       "0                 0.00                 1.00         vehicle   \n",
       "1                 0.00                 2.00         vehicle   \n",
       "2                 1.00                 2.00         vehicle   \n",
       "3                 0.00                 2.00  ped or cyclist   \n",
       "4                 1.00                 1.00         vehicle   \n",
       "\n",
       "              man_coll weather      body_typ  haz_inv  fire_exp l_status  \\\n",
       "0                 0.00    good           car        1         0    valid   \n",
       "1                 1.00    good    van or SUV        1         0    valid   \n",
       "2                 2.00    good  pickup truck        1         0    valid   \n",
       "3                 0.00    good  pickup truck        1         0    valid   \n",
       "4                 2.00    good           car        1         0    valid   \n",
       "\n",
       "  cdl_stat             l_restri             prev_acc             prev_sus  \\\n",
       "0  invalid                 0.00                 0.00                 1.00   \n",
       "1  invalid                 1.00                 0.00                 0.00   \n",
       "2  invalid                 0.00                 1.00                 0.00   \n",
       "3  invalid                 0.00                 1.00                 0.00   \n",
       "4  invalid                 0.00                 0.00                 0.00   \n",
       "\n",
       "              prev_dwi             prev_spd             prev_oth  \\\n",
       "0                 1.00                 0.00                 0.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 0.00                 1.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "\n",
       "       speedrel vsurcond             vtcont_f                  sex  inj_sev  \\\n",
       "0      speeding      dry                 0.00                 1.00  serious   \n",
       "1  not_speeding      wet                 3.00                 2.00  serious   \n",
       "2  not_speeding      dry                 0.00                 2.00  serious   \n",
       "3  not_speeding      dry                 0.00                 1.00    minor   \n",
       "4  not_speeding      wet                 0.00                 1.00  serious   \n",
       "\n",
       "   rest_mis  \n",
       "0         0  \n",
       "1         0  \n",
       "2         0  \n",
       "3         0  \n",
       "4         0  "
      ]
     },
     "execution_count": 24,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traffic.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 25,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# pickle it! \n",
    "with open('pop_data.pkl', 'wb') as picklefile:\n",
    "   pickle.dump(traffic, picklefile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 26,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Create dummy variables except for the y variable\n",
    "for col in traffic.columns[1:]:\n",
    "    traffic_dummies = pd.get_dummies(traffic[col], prefix = col, drop_first = True)\n",
    "    traffic = traffic.join(traffic_dummies)\n",
    "    traffic = traffic.drop(col, 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hit_run</th>\n",
       "      <th>drunk_dr_1</th>\n",
       "      <th>drugs_1.0</th>\n",
       "      <th>age_(20, 65]</th>\n",
       "      <th>age_(65, 120]</th>\n",
       "      <th>ve_total_2</th>\n",
       "      <th>ve_total_3</th>\n",
       "      <th>ve_total_4</th>\n",
       "      <th>ve_total_5</th>\n",
       "      <th>peds_1</th>\n",
       "      <th>permvit_2</th>\n",
       "      <th>permvit_3</th>\n",
       "      <th>permvit_4</th>\n",
       "      <th>permvit_5</th>\n",
       "      <th>fatals_1</th>\n",
       "      <th>deaths_1</th>\n",
       "      <th>month_spring</th>\n",
       "      <th>month_summer</th>\n",
       "      <th>month_winter</th>\n",
       "      <th>day_week_weekend</th>\n",
       "      <th>hour_nighttime</th>\n",
       "      <th>nhs_1.0</th>\n",
       "      <th>rur_urb_2.0</th>\n",
       "      <th>rur_urb_6.0</th>\n",
       "      <th>harm_ev_inanimate</th>\n",
       "      <th>harm_ev_ped or cyclist</th>\n",
       "      <th>harm_ev_train</th>\n",
       "      <th>harm_ev_vehicle</th>\n",
       "      <th>man_coll_1.0</th>\n",
       "      <th>man_coll_2.0</th>\n",
       "      <th>man_coll_6.0</th>\n",
       "      <th>man_coll_7.0</th>\n",
       "      <th>man_coll_8.0</th>\n",
       "      <th>man_coll_9.0</th>\n",
       "      <th>man_coll_10.0</th>\n",
       "      <th>man_coll_11.0</th>\n",
       "      <th>weather_good</th>\n",
       "      <th>body_typ_bus</th>\n",
       "      <th>body_typ_car</th>\n",
       "      <th>body_typ_convertible</th>\n",
       "      <th>body_typ_motorcycle</th>\n",
       "      <th>body_typ_other</th>\n",
       "      <th>body_typ_pickup truck</th>\n",
       "      <th>body_typ_van or SUV</th>\n",
       "      <th>haz_inv_2</th>\n",
       "      <th>fire_exp_1</th>\n",
       "      <th>l_status_valid</th>\n",
       "      <th>cdl_stat_valid</th>\n",
       "      <th>l_restri_1.0</th>\n",
       "      <th>l_restri_2.0</th>\n",
       "      <th>l_restri_3.0</th>\n",
       "      <th>prev_acc_1.0</th>\n",
       "      <th>prev_sus_1.0</th>\n",
       "      <th>prev_dwi_1.0</th>\n",
       "      <th>prev_spd_1.0</th>\n",
       "      <th>prev_oth_1.0</th>\n",
       "      <th>speedrel_speeding</th>\n",
       "      <th>vsurcond_dry</th>\n",
       "      <th>vsurcond_wet</th>\n",
       "      <th>vtcont_f_1.0</th>\n",
       "      <th>vtcont_f_2.0</th>\n",
       "      <th>vtcont_f_3.0</th>\n",
       "      <th>sex_2.0</th>\n",
       "      <th>inj_sev_serious</th>\n",
       "      <th>rest_mis_1</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>5</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>6</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>7</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>8</th>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>9</th>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>1.00</td>\n",
       "      <td>0.00</td>\n",
       "      <td>0.00</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "</div>"
      ],
      "text/plain": [
       "               hit_run           drunk_dr_1            drugs_1.0  \\\n",
       "0                 0.00                 1.00                 0.00   \n",
       "1                 0.00                 1.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 0.00                 1.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 0.00                 0.00                 0.00   \n",
       "6                 0.00                 0.00                 0.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 0.00                 0.00                 0.00   \n",
       "9                 0.00                 1.00                 0.00   \n",
       "\n",
       "          age_(20, 65]        age_(65, 120]           ve_total_2  \\\n",
       "0                 1.00                 0.00                 0.00   \n",
       "1                 1.00                 0.00                 0.00   \n",
       "2                 1.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 1.00   \n",
       "4                 0.00                 1.00                 1.00   \n",
       "5                 1.00                 0.00                 1.00   \n",
       "6                 0.00                 1.00                 1.00   \n",
       "7                 1.00                 0.00                 1.00   \n",
       "8                 1.00                 0.00                 0.00   \n",
       "9                 1.00                 0.00                 1.00   \n",
       "\n",
       "            ve_total_3           ve_total_4           ve_total_5  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 0.00                 1.00   \n",
       "2                 0.00                 1.00                 0.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 0.00                 0.00                 0.00   \n",
       "6                 0.00                 0.00                 0.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 0.00                 0.00                 1.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "                peds_1            permvit_2            permvit_3  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 1.00                 1.00                 0.00   \n",
       "4                 0.00                 1.00                 0.00   \n",
       "5                 0.00                 0.00                 1.00   \n",
       "6                 0.00                 0.00                 0.00   \n",
       "7                 0.00                 0.00                 1.00   \n",
       "8                 0.00                 0.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "             permvit_4            permvit_5             fatals_1  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 1.00                 0.00   \n",
       "2                 0.00                 1.00                 0.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 0.00                 0.00                 0.00   \n",
       "6                 0.00                 1.00                 1.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 0.00                 1.00                 0.00   \n",
       "9                 1.00                 0.00                 0.00   \n",
       "\n",
       "              deaths_1         month_spring         month_summer  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 0.00   \n",
       "4                 0.00                 1.00                 0.00   \n",
       "5                 1.00                 1.00                 0.00   \n",
       "6                 1.00                 1.00                 0.00   \n",
       "7                 1.00                 1.00                 0.00   \n",
       "8                 0.00                 1.00                 0.00   \n",
       "9                 1.00                 1.00                 0.00   \n",
       "\n",
       "          month_winter     day_week_weekend       hour_nighttime  \\\n",
       "0                 1.00                 0.00                 0.00   \n",
       "1                 1.00                 0.00                 0.00   \n",
       "2                 1.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 1.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 0.00                 0.00                 0.00   \n",
       "6                 0.00                 1.00                 1.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 0.00                 0.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "               nhs_1.0          rur_urb_2.0          rur_urb_6.0  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 1.00                 0.00   \n",
       "2                 1.00                 1.00                 0.00   \n",
       "3                 0.00                 1.00                 0.00   \n",
       "4                 1.00                 0.00                 0.00   \n",
       "5                 0.00                 0.00                 0.00   \n",
       "6                 0.00                 0.00                 0.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 1.00                 0.00                 0.00   \n",
       "9                 0.00                 1.00                 0.00   \n",
       "\n",
       "     harm_ev_inanimate  harm_ev_ped or cyclist        harm_ev_train  \\\n",
       "0                 0.00                    0.00                 0.00   \n",
       "1                 0.00                    0.00                 0.00   \n",
       "2                 0.00                    0.00                 0.00   \n",
       "3                 0.00                    1.00                 0.00   \n",
       "4                 0.00                    0.00                 0.00   \n",
       "5                 0.00                    0.00                 0.00   \n",
       "6                 0.00                    0.00                 0.00   \n",
       "7                 0.00                    0.00                 0.00   \n",
       "8                 0.00                    0.00                 0.00   \n",
       "9                 0.00                    0.00                 0.00   \n",
       "\n",
       "       harm_ev_vehicle         man_coll_1.0         man_coll_2.0  \\\n",
       "0                 1.00                 0.00                 0.00   \n",
       "1                 1.00                 1.00                 0.00   \n",
       "2                 1.00                 0.00                 1.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 1.00                 0.00                 1.00   \n",
       "5                 1.00                 0.00                 0.00   \n",
       "6                 1.00                 0.00                 0.00   \n",
       "7                 1.00                 0.00                 0.00   \n",
       "8                 1.00                 1.00                 0.00   \n",
       "9                 1.00                 0.00                 1.00   \n",
       "\n",
       "          man_coll_6.0         man_coll_7.0         man_coll_8.0  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 1.00                 0.00                 0.00   \n",
       "6                 1.00                 0.00                 0.00   \n",
       "7                 1.00                 0.00                 0.00   \n",
       "8                 0.00                 0.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "          man_coll_9.0        man_coll_10.0        man_coll_11.0  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 0.00                 0.00                 0.00   \n",
       "6                 0.00                 0.00                 0.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 0.00                 0.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "          weather_good         body_typ_bus         body_typ_car  \\\n",
       "0                 1.00                 0.00                 1.00   \n",
       "1                 1.00                 0.00                 0.00   \n",
       "2                 1.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 0.00   \n",
       "4                 1.00                 0.00                 1.00   \n",
       "5                 1.00                 0.00                 0.00   \n",
       "6                 1.00                 0.00                 1.00   \n",
       "7                 1.00                 0.00                 0.00   \n",
       "8                 1.00                 0.00                 1.00   \n",
       "9                 1.00                 0.00                 0.00   \n",
       "\n",
       "   body_typ_convertible  body_typ_motorcycle       body_typ_other  \\\n",
       "0                  0.00                 0.00                 0.00   \n",
       "1                  0.00                 0.00                 0.00   \n",
       "2                  0.00                 0.00                 0.00   \n",
       "3                  0.00                 0.00                 0.00   \n",
       "4                  0.00                 0.00                 0.00   \n",
       "5                  0.00                 0.00                 0.00   \n",
       "6                  0.00                 0.00                 0.00   \n",
       "7                  0.00                 0.00                 0.00   \n",
       "8                  0.00                 0.00                 0.00   \n",
       "9                  0.00                 0.00                 0.00   \n",
       "\n",
       "   body_typ_pickup truck  body_typ_van or SUV            haz_inv_2  \\\n",
       "0                   0.00                 0.00                 0.00   \n",
       "1                   0.00                 1.00                 0.00   \n",
       "2                   1.00                 0.00                 0.00   \n",
       "3                   1.00                 0.00                 0.00   \n",
       "4                   0.00                 0.00                 0.00   \n",
       "5                   1.00                 0.00                 0.00   \n",
       "6                   0.00                 0.00                 0.00   \n",
       "7                   0.00                 1.00                 0.00   \n",
       "8                   0.00                 0.00                 0.00   \n",
       "9                   0.00                 1.00                 0.00   \n",
       "\n",
       "            fire_exp_1       l_status_valid       cdl_stat_valid  \\\n",
       "0                 0.00                 1.00                 0.00   \n",
       "1                 0.00                 1.00                 0.00   \n",
       "2                 0.00                 1.00                 0.00   \n",
       "3                 0.00                 1.00                 0.00   \n",
       "4                 0.00                 1.00                 0.00   \n",
       "5                 0.00                 1.00                 1.00   \n",
       "6                 0.00                 1.00                 0.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 1.00                 1.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "          l_restri_1.0         l_restri_2.0         l_restri_3.0  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 1.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 1.00                 0.00                 0.00   \n",
       "6                 0.00                 0.00                 0.00   \n",
       "7                 0.00                 1.00                 0.00   \n",
       "8                 1.00                 0.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "          prev_acc_1.0         prev_sus_1.0         prev_dwi_1.0  \\\n",
       "0                 0.00                 1.00                 1.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 1.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 1.00                 0.00                 0.00   \n",
       "6                 1.00                 0.00                 0.00   \n",
       "7                 1.00                 1.00                 0.00   \n",
       "8                 1.00                 0.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "          prev_spd_1.0         prev_oth_1.0    speedrel_speeding  \\\n",
       "0                 0.00                 0.00                 1.00   \n",
       "1                 0.00                 0.00                 0.00   \n",
       "2                 0.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 1.00                 0.00                 0.00   \n",
       "6                 0.00                 0.00                 0.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 1.00                 0.00                 0.00   \n",
       "9                 0.00                 0.00                 0.00   \n",
       "\n",
       "          vsurcond_dry         vsurcond_wet         vtcont_f_1.0  \\\n",
       "0                 1.00                 0.00                 0.00   \n",
       "1                 0.00                 1.00                 0.00   \n",
       "2                 1.00                 0.00                 0.00   \n",
       "3                 1.00                 0.00                 0.00   \n",
       "4                 0.00                 1.00                 0.00   \n",
       "5                 1.00                 0.00                 0.00   \n",
       "6                 1.00                 0.00                 0.00   \n",
       "7                 1.00                 0.00                 0.00   \n",
       "8                 1.00                 0.00                 0.00   \n",
       "9                 1.00                 0.00                 0.00   \n",
       "\n",
       "          vtcont_f_2.0         vtcont_f_3.0              sex_2.0  \\\n",
       "0                 0.00                 0.00                 0.00   \n",
       "1                 0.00                 1.00                 1.00   \n",
       "2                 0.00                 0.00                 1.00   \n",
       "3                 0.00                 0.00                 0.00   \n",
       "4                 0.00                 0.00                 0.00   \n",
       "5                 0.00                 1.00                 0.00   \n",
       "6                 0.00                 1.00                 0.00   \n",
       "7                 0.00                 0.00                 0.00   \n",
       "8                 0.00                 0.00                 1.00   \n",
       "9                 0.00                 0.00                 1.00   \n",
       "\n",
       "       inj_sev_serious           rest_mis_1  \n",
       "0                 1.00                 0.00  \n",
       "1                 1.00                 0.00  \n",
       "2                 1.00                 0.00  \n",
       "3                 0.00                 0.00  \n",
       "4                 1.00                 0.00  \n",
       "5                 0.00                 0.00  \n",
       "6                 1.00                 0.00  \n",
       "7                 0.00                 0.00  \n",
       "8                 1.00                 0.00  \n",
       "9                 0.00                 0.00  "
      ]
     },
     "execution_count": 27,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traffic.head(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 28,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(24363, 65)"
      ]
     },
     "execution_count": 28,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "traffic.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 29,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(317, 65)"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# filter for only hit and runs\n",
    "hit_run = traffic.loc[traffic['hit_run'] == 1]\n",
    "hit_run.shape"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# pickle it! \n",
    "# This table will be used for two models examining characteristics of drivers in hit and runs (excluding non hit/runs)\n",
    "with open('hit_run.pkl', 'wb') as picklefile:\n",
    "   pickle.dump(hit_run, picklefile)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": [
    "# Create model to predict whether or not an accident was a hit and run\n",
    "\n",
    "# Set X and y\n",
    "# Set y to hit & run\n",
    "y = traffic.ix[:,0]\n",
    "X = traffic.ix[:,1:]\n",
    "\n",
    "# Split into train & test\n",
    "X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.30, random_state=4444, stratify=y)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {
    "collapsed": false
   },
   "outputs": [],
   "source": [
    "# Oversample hit & runs\n",
    "train_data = pd.concat([X_train, y_train], axis=1, join='inner')\n",
    "hit_run = train_data.loc[train_data['hit_run'] == 1]\n",
    "no_hr = train_data.loc[train_data['hit_run'] == 0]\n",
    "\n",
    "for i in range(60):\n",
    "    no_hr = no_hr.append(hit_run)\n",
    "\n",
    "\n",
    "hit_run = no_hr\n",
    "\n",
    "#Set x and y training data again\n",
    "y_train = hit_run.ix[:,0]\n",
    "X_train = hit_run.drop(['hit_run'], axis = 1)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "0.00    16832\n",
       "1.00    13320\n",
       "Name: hit_run, dtype: int64"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "hit_run.hit_run.value_counts()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 34,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train 0.904782435659 0.810918046244\n",
      "precision: 0.0264900662252\n",
      "recall: 0.378947368421\n",
      "F1: 0.0495185694635\n",
      "confusion matrix: [[5891 1323]\n",
      " [  59   36]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[(u'drunk_dr_1', 0.97505680404088912),\n",
       " (u'hour_nighttime', 0.17728359346094552),\n",
       " (u'speedrel_speeding', 0.078701662945269132),\n",
       " (u'drugs_1.0', 0.053217003860173022),\n",
       " (u'harm_ev_inanimate', 0.041848679031064644),\n",
       " (u'prev_dwi_1.0', 0.033878474123020197),\n",
       " (u'man_coll_1.0', 0.02834642247182512),\n",
       " (u'prev_sus_1.0', 0.021373668716378181),\n",
       " (u'vtcont_f_3.0', 0.005992318731275325),\n",
       " (u'vtcont_f_2.0', 0.0053937722493797094),\n",
       " (u'fire_exp_1', 0.0047815878885847382),\n",
       " (u'fatals_1', 0.0046304083068121147),\n",
       " (u'l_restri_2.0', 0.0044047799736970468),\n",
       " (u'body_typ_pickup truck', 0.0026585938259380535),\n",
       " (u'permvit_3', 0.0012845722513099658),\n",
       " (u'body_typ_other', 0.00024750926311472568),\n",
       " (u'man_coll_2.0', 2.0355103902918744e-05),\n",
       " (u'man_coll_10.0', 0.0),\n",
       " (u'rur_urb_6.0', -0.00031575427882519005),\n",
       " (u'rest_mis_1', -0.00040548986036229999),\n",
       " (u'haz_inv_2', -0.00072832094359910268),\n",
       " (u'harm_ev_train', -0.0011077605686683177),\n",
       " (u'body_typ_convertible', -0.0019446097513899916),\n",
       " (u'man_coll_11.0', -0.0026850327881421535),\n",
       " (u'vtcont_f_1.0', -0.0043257601709184986),\n",
       " (u'permvit_2', -0.0044216935587498502),\n",
       " (u'man_coll_9.0', -0.0050875408476994104),\n",
       " (u'man_coll_8.0', -0.0079977953239872418),\n",
       " (u'body_typ_bus', -0.0087129024485764813),\n",
       " (u'body_typ_van or SUV', -0.011587069683446501),\n",
       " (u'prev_oth_1.0', -0.012343170365154567),\n",
       " (u've_total_4', -0.014561955080725296),\n",
       " (u'permvit_4', -0.014813630252250045),\n",
       " (u'body_typ_motorcycle', -0.019831989512836112),\n",
       " (u'l_restri_1.0', -0.022572037882535912),\n",
       " (u'age_(20, 65]', -0.025187192035586951),\n",
       " (u'rur_urb_2.0', -0.026489123549278532),\n",
       " (u'man_coll_7.0', -0.032060163300760364),\n",
       " (u've_total_5', -0.035423094185663105),\n",
       " (u've_total_3', -0.036626588979490879),\n",
       " (u'permvit_5', -0.036972935252331911),\n",
       " (u'month_summer', -0.037076119919739373),\n",
       " (u'month_winter', -0.038158842250114983),\n",
       " (u've_total_2', -0.042677627363775561),\n",
       " (u'month_spring', -0.043548331974946772),\n",
       " (u'day_week_weekend', -0.043918690653157531),\n",
       " (u'prev_spd_1.0', -0.046408120806285098),\n",
       " (u'prev_acc_1.0', -0.054884131736233736),\n",
       " (u'body_typ_car', -0.057512492527454488),\n",
       " (u'vsurcond_dry', -0.073379477848920863),\n",
       " (u'cdl_stat_valid', -0.074930605554571914),\n",
       " (u'man_coll_6.0', -0.076615822139941878),\n",
       " (u'age_(65, 120]', -0.081563047833178692),\n",
       " (u'nhs_1.0', -0.085538375301818362),\n",
       " (u'l_restri_3.0', -0.087172184379717424),\n",
       " (u'inj_sev_serious', -0.091299563445599474),\n",
       " (u'harm_ev_vehicle', -0.092356469191492332),\n",
       " (u'vsurcond_wet', -0.09446075660359074),\n",
       " (u'sex_2.0', -0.11130712914939998),\n",
       " (u'harm_ev_ped or cyclist', -0.12251925033259763),\n",
       " (u'weather_good', -0.12666940156068193),\n",
       " (u'peds_1', -0.13493640381406735),\n",
       " (u'deaths_1', -0.13561705307691799),\n",
       " (u'l_status_valid', -0.18499345702025152)]"
      ]
     },
     "execution_count": 34,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Fit the model & print out score\n",
    "log_model = LogisticRegression(penalty = 'l2', C = .00021)\n",
    "result = log_model.fit(X_train, y_train)\n",
    "\n",
    "y_pred = log_model.predict(X_test)\n",
    "train_score = log_model.score(X_train, y_train)\n",
    "test_score = log_model.score(X_test, y_test)\n",
    "\n",
    "print \"train\", train_score, test_score\n",
    "print \"precision:\", precision_score(y_test, y_pred)\n",
    "print \"recall:\", recall_score(y_test, y_pred)\n",
    "print \"F1:\", f1_score(y_test, y_pred)\n",
    "print \"confusion matrix:\", confusion_matrix(y_test, y_pred)\n",
    "\n",
    "coefficients = zip(X.columns, log_model.coef_[0])\n",
    "sorted(coefficients, key = lambda x: x[1], reverse = True)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 35,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Random forest: 1.0 0.745929675742\n",
      "precision: 0.0242980561555\n",
      "recall: 0.473684210526\n",
      "F1: 0.0462249614792\n",
      "confusion matrix on whole: [[5407 1807]\n",
      " [  50   45]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[(u'drunk_dr_1', 0.76426754273885478),\n",
       " (u'hour_nighttime', 0.035992806429332079),\n",
       " (u'speedrel_speeding', 0.021681663984185473),\n",
       " (u'drugs_1.0', 0.0086750165680059364),\n",
       " (u'sex_2.0', 0.0085752888463531875),\n",
       " (u'harm_ev_inanimate', 0.0083916352349242811),\n",
       " (u'prev_dwi_1.0', 0.0074270119166660892),\n",
       " (u'peds_1', 0.0071917030842332929),\n",
       " (u'prev_oth_1.0', 0.0067576076015978381),\n",
       " (u'body_typ_van or SUV', 0.006458410058955066),\n",
       " (u'harm_ev_ped or cyclist', 0.0056541209293984795),\n",
       " (u'deaths_1', 0.0055534810225009792),\n",
       " (u'prev_sus_1.0', 0.0050835841429522407),\n",
       " (u'l_restri_3.0', 0.0049132262301730747),\n",
       " (u'vsurcond_dry', 0.0047169191709652124),\n",
       " (u'age_(20, 65]', 0.0044809230179800501),\n",
       " (u'nhs_1.0', 0.0040771735922642185),\n",
       " (u'inj_sev_serious', 0.0040739303253700633),\n",
       " (u'vtcont_f_3.0', 0.0039727915587480806),\n",
       " (u'prev_acc_1.0', 0.0039686614149620665),\n",
       " (u'cdl_stat_valid', 0.0039339465805995856),\n",
       " (u'prev_spd_1.0', 0.003882459851734763),\n",
       " (u'body_typ_car', 0.0038526320828427352),\n",
       " (u'rur_urb_2.0', 0.0037823553083464133),\n",
       " (u've_total_2', 0.003716316543762181),\n",
       " (u'age_(65, 120]', 0.0036922006815577695),\n",
       " (u'l_status_valid', 0.0036898968350592429),\n",
       " (u'month_winter', 0.0032583762200186273),\n",
       " (u'month_spring', 0.0031250168310957812),\n",
       " (u'weather_good', 0.0030981649207399127),\n",
       " (u'vsurcond_wet', 0.0030234860952464988),\n",
       " (u'man_coll_1.0', 0.0029861261489337143),\n",
       " (u'month_summer', 0.0029119166389368961),\n",
       " (u'man_coll_6.0', 0.0028054993371417879),\n",
       " (u'permvit_3', 0.0027664948615502482),\n",
       " (u'fatals_1', 0.0025919159415116102),\n",
       " (u'permvit_2', 0.0024139682498344342),\n",
       " (u'body_typ_pickup truck', 0.0023608256215551788),\n",
       " (u've_total_5', 0.0022415439387210669),\n",
       " (u've_total_3', 0.0021363599700723102),\n",
       " (u'man_coll_7.0', 0.0020026795040131657),\n",
       " (u'day_week_weekend', 0.0019135946972148703),\n",
       " (u'l_restri_1.0', 0.0018070586208021433),\n",
       " (u'harm_ev_vehicle', 0.0014968074579622286),\n",
       " (u've_total_4', 0.001289739684890324),\n",
       " (u'permvit_5', 0.0012697905124150397),\n",
       " (u'vtcont_f_2.0', 0.0011837651617355649),\n",
       " (u'man_coll_2.0', 0.0009951343803842785),\n",
       " (u'permvit_4', 0.00099451868285852776),\n",
       " (u'body_typ_motorcycle', 0.0006702390602320561),\n",
       " (u'man_coll_9.0', 0.00064176137002008328),\n",
       " (u'l_restri_2.0', 0.00035995863835680574),\n",
       " (u'body_typ_other', 0.00035889127003223829),\n",
       " (u'fire_exp_1', 0.00031134549117667733),\n",
       " (u'man_coll_8.0', 0.0001285356420206615),\n",
       " (u'haz_inv_2', 9.4748959569982143e-05),\n",
       " (u'man_coll_11.0', 8.5982417698613847e-05),\n",
       " (u'body_typ_convertible', 6.8626883491912174e-05),\n",
       " (u'body_typ_bus', 5.7271454597963597e-05),\n",
       " (u'rur_urb_6.0', 5.6487508652487747e-05),\n",
       " (u'rest_mis_1', 2.1832568344877387e-05),\n",
       " (u'harm_ev_train', 7.8710120631918859e-06),\n",
       " (u'vtcont_f_1.0', 3.5849378315768544e-07),\n",
       " (u'man_coll_10.0', 0.0)]"
      ]
     },
     "execution_count": 35,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Random Forest\n",
    "forest_model = RandomForestClassifier(bootstrap=False, min_samples_leaf=1, min_samples_split=3, \n",
    "                                      criterion='gini', max_features=10, max_depth=None)\n",
    "\n",
    "\n",
    "result = forest_model.fit(X_train, y_train)\n",
    "y_pred = forest_model.predict(X_test)\n",
    "test = forest_model.score(X_test, y_test)\n",
    "train = forest_model.score(X_train, y_train)\n",
    "\n",
    "print \"Random forest:\", train, test\n",
    "print \"precision:\", precision_score(y_test, y_pred)\n",
    "print \"recall:\", recall_score(y_test, y_pred)\n",
    "print \"F1:\", f1_score(y_test, y_pred)\n",
    "print \"confusion matrix on whole:\", confusion_matrix(y_test, y_pred)\n",
    "\n",
    "features = zip(X.columns, forest_model.feature_importances_)\n",
    "sorted(features, key = lambda x: x[1], reverse = True)\n",
    "\n",
    "# Grid search code to determine best parameters\n",
    "\n",
    "# # Utility function to report best scores\n",
    "# def report(results, n_top=3):\n",
    "#     for i in range(1, n_top + 1):\n",
    "#         candidates = np.flatnonzero(results['rank_test_score'] == i)\n",
    "#         for candidate in candidates:\n",
    "#             print(\"Model with rank: {0}\".format(i))\n",
    "#             print(\"Mean validation score: {0:.3f} (std: {1:.3f})\".format(\n",
    "#                   results['mean_test_score'][candidate],\n",
    "#                   results['std_test_score'][candidate]))\n",
    "#             print(\"Parameters: {0}\".format(results['params'][candidate]))\n",
    "#             print(\"\")\n",
    "            \n",
    "# # use a full grid over all parameters\n",
    "# param_grid = {\"max_depth\": [3, None],\n",
    "#               \"max_features\": [1, 3, 10],\n",
    "#               \"min_samples_split\": [1.0, 3, 10],\n",
    "#               \"min_samples_leaf\": [1, 3, 10],\n",
    "#               \"bootstrap\": [True, False],\n",
    "#               \"criterion\": [\"gini\", \"entropy\"]}\n",
    "\n",
    "# # run grid search\n",
    "# grid_search = GridSearchCV(forest_model, param_grid=param_grid)\n",
    "# start = time()\n",
    "# grid_search.fit(X_test, y_test)\n",
    "\n",
    "# print(\"GridSearchCV took %.2f seconds for %d candidate parameter settings.\"\n",
    "#       % (time() - start, len(grid_search.cv_results_['params'])))\n",
    "# report(grid_search.cv_results_)\n",
    "\n",
    "# df_confusion = pd.crosstab(y_test, y_pred)\n",
    "# print df_confusion"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 36,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Decision Tree: 1.0 0.74579285812\n",
      "precision: 0.473684210526\n",
      "recall: 0.0242849433351\n",
      "F1: 0.0462012320329\n",
      "precision on whole: 0.0240823783425\n",
      "recall on whole: 0.457413249211\n",
      "confusion matrix on whole: [[18170  5876]\n",
      " [  172   145]]\n"
     ]
    },
    {
     "data": {
      "text/plain": [
       "[(u'drunk_dr_1', 0.76426754273885478),\n",
       " (u'hour_nighttime', 0.035992806429332079),\n",
       " (u'speedrel_speeding', 0.021681663984185473),\n",
       " (u'drugs_1.0', 0.0086750165680059364),\n",
       " (u'sex_2.0', 0.0085752888463531875),\n",
       " (u'harm_ev_inanimate', 0.0083916352349242811),\n",
       " (u'prev_dwi_1.0', 0.0074270119166660892),\n",
       " (u'peds_1', 0.0071917030842332929),\n",
       " (u'prev_oth_1.0', 0.0067576076015978381),\n",
       " (u'body_typ_van or SUV', 0.006458410058955066),\n",
       " (u'harm_ev_ped or cyclist', 0.0056541209293984795),\n",
       " (u'deaths_1', 0.0055534810225009792),\n",
       " (u'prev_sus_1.0', 0.0050835841429522407),\n",
       " (u'l_restri_3.0', 0.0049132262301730747),\n",
       " (u'vsurcond_dry', 0.0047169191709652124),\n",
       " (u'age_(20, 65]', 0.0044809230179800501),\n",
       " (u'nhs_1.0', 0.0040771735922642185),\n",
       " (u'inj_sev_serious', 0.0040739303253700633),\n",
       " (u'vtcont_f_3.0', 0.0039727915587480806),\n",
       " (u'prev_acc_1.0', 0.0039686614149620665),\n",
       " (u'cdl_stat_valid', 0.0039339465805995856),\n",
       " (u'prev_spd_1.0', 0.003882459851734763),\n",
       " (u'body_typ_car', 0.0038526320828427352),\n",
       " (u'rur_urb_2.0', 0.0037823553083464133),\n",
       " (u've_total_2', 0.003716316543762181),\n",
       " (u'age_(65, 120]', 0.0036922006815577695),\n",
       " (u'l_status_valid', 0.0036898968350592429),\n",
       " (u'month_winter', 0.0032583762200186273),\n",
       " (u'month_spring', 0.0031250168310957812),\n",
       " (u'weather_good', 0.0030981649207399127),\n",
       " (u'vsurcond_wet', 0.0030234860952464988),\n",
       " (u'man_coll_1.0', 0.0029861261489337143),\n",
       " (u'month_summer', 0.0029119166389368961),\n",
       " (u'man_coll_6.0', 0.0028054993371417879),\n",
       " (u'permvit_3', 0.0027664948615502482),\n",
       " (u'fatals_1', 0.0025919159415116102),\n",
       " (u'permvit_2', 0.0024139682498344342),\n",
       " (u'body_typ_pickup truck', 0.0023608256215551788),\n",
       " (u've_total_5', 0.0022415439387210669),\n",
       " (u've_total_3', 0.0021363599700723102),\n",
       " (u'man_coll_7.0', 0.0020026795040131657),\n",
       " (u'day_week_weekend', 0.0019135946972148703),\n",
       " (u'l_restri_1.0', 0.0018070586208021433),\n",
       " (u'harm_ev_vehicle', 0.0014968074579622286),\n",
       " (u've_total_4', 0.001289739684890324),\n",
       " (u'permvit_5', 0.0012697905124150397),\n",
       " (u'vtcont_f_2.0', 0.0011837651617355649),\n",
       " (u'man_coll_2.0', 0.0009951343803842785),\n",
       " (u'permvit_4', 0.00099451868285852776),\n",
       " (u'body_typ_motorcycle', 0.0006702390602320561),\n",
       " (u'man_coll_9.0', 0.00064176137002008328),\n",
       " (u'l_restri_2.0', 0.00035995863835680574),\n",
       " (u'body_typ_other', 0.00035889127003223829),\n",
       " (u'fire_exp_1', 0.00031134549117667733),\n",
       " (u'man_coll_8.0', 0.0001285356420206615),\n",
       " (u'haz_inv_2', 9.4748959569982143e-05),\n",
       " (u'man_coll_11.0', 8.5982417698613847e-05),\n",
       " (u'body_typ_convertible', 6.8626883491912174e-05),\n",
       " (u'body_typ_bus', 5.7271454597963597e-05),\n",
       " (u'rur_urb_6.0', 5.6487508652487747e-05),\n",
       " (u'rest_mis_1', 2.1832568344877387e-05),\n",
       " (u'harm_ev_train', 7.8710120631918859e-06),\n",
       " (u'vtcont_f_1.0', 3.5849378315768544e-07),\n",
       " (u'man_coll_10.0', 0.0)]"
      ]
     },
     "execution_count": 36,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "# Decision Tree\n",
    "tree_model = DecisionTreeClassifier(max_depth = 8)\n",
    "result = tree_model.fit(X_train, y_train)\n",
    "y_pred = tree_model.predict(X_test)\n",
    "test = tree_model.score(X_test, y_test)\n",
    "train = tree_model.score(X_train, y_train)\n",
    "\n",
    "print \"Decision Tree:\", train, test\n",
    "print \"precision:\", precision_score(y_pred, y_test)\n",
    "print \"recall:\", recall_score(y_pred, y_test)\n",
    "print \"F1:\", f1_score(y_pred, y_test)\n",
    "\n",
    "y_whole = forest_model.predict(traffic.ix[:,1:])\n",
    "\n",
    "print \"precision on whole:\", precision_score(traffic.ix[:,0], y_whole)\n",
    "print \"recall on whole:\", recall_score(traffic.ix[:,0], y_whole)\n",
    "print \"confusion matrix on whole:\", confusion_matrix(traffic.ix[:,0], y_whole)\n",
    "\n",
    "\n",
    "features = zip(X.columns, forest_model.feature_importances_)\n",
    "sorted(features, key = lambda x: x[1], reverse = True)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 37,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "SVM: 0.74579285812\n",
      "precision: 0.0242849433351\n",
      "recall: 0.473684210526\n",
      "F1: 0.0462012320329\n"
     ]
    }
   ],
   "source": [
    "# Support Vector Machine\n",
    "SVM_model = SVC()\n",
    "SVM_model.fit(X_train, y_train)\n",
    "y_pred = SVM_model.predict(X_test)\n",
    "SVM_score = SVM_model.score(X_test, y_test)\n",
    "\n",
    "print \"SVM:\", SVM_score\n",
    "print \"precision:\", precision_score(y_test, y_pred)\n",
    "print \"recall:\", recall_score(y_test, y_pred)\n",
    "print \"F1:\", f1_score(y_test, y_pred)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 38,
   "metadata": {
    "collapsed": false
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "train 0.988591138233 0.774524558763\n",
      "precision: 0.0221538461538\n",
      "recall: 0.378947368421\n",
      "F1: 0.0418604651163\n"
     ]
    }
   ],
   "source": [
    "\n",
    "KNN_model = KNeighborsClassifier()\n",
    "result = KNN_model.fit(X_train, y_train)\n",
    "\n",
    "y_pred = KNN_model.predict(X_test)\n",
    "train_score = KNN_model.score(X_train, y_train)\n",
    "test_score = KNN_model.score(X_test, y_test)\n",
    "\n",
    "print \"train\", train_score, test_score\n",
    "print \"precision:\", precision_score(y_test, y_pred)\n",
    "print \"recall:\", recall_score(y_test, y_pred)\n",
    "print \"F1:\", f1_score(y_test, y_pred)\n",
    "\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {
    "collapsed": true
   },
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernelspec": {
   "display_name": "Python [default]",
   "language": "python",
   "name": "python2"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 2
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython2",
   "version": "2.7.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 1
}
